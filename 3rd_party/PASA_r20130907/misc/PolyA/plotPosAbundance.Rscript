

plotKmerByPosFile = function (file, num_show=50) {
	data = parseKmerPositionFile(file);
	plotKmerByPos(data, num_show);		 
}

parseKmerPositionFile = function(file) {
	data = read.table(file, row.names=1, header=F);
	return(data);
}				  

plotKmerByPos = function(data, num_show=50) {	
	origPar = par(mfrow=c(2,1));

	num_kmers = length(data[,1]);
	num_positions = length(data[1,]);

	if (num_kmers < num_show) {
		num_show = num_kmers;
	}
	
	colors = rainbow(num_show, start=0.7, end=0.1);
	maxY = get_max(data[1:num_show,]);
	plot(seq(1,num_positions), data[num_show,], col=colors[1], type='l', ylim=c(0, maxY), xlab="Sequence Position", ylab="Frequency");
	for (i in (num_show-1):1) {
		points(seq(1,num_positions), data[i,], col=colors[i], type='l');
	}
	plot.new();
	legend('center', rownames(data)[1:num_show], col=colors, pch=15,  ncol=8, cex=1);
	par(origPar);
}


plotSelectedKmers = function (data, KmerList) {
	origPar = par(mfrow=c(2,1));

	num_kmers = length(KmerList);
	num_positions = length(data[1,]);
	colors = rainbow(num_kmers, start=0.7, end=0.1);
	
	maxY = 0;
	for (i in 1:num_kmers) {
		m = get_max(data[KmerList[i],]);
		if (m > maxY) { 
			maxY = m; 
		}
	}	
	
	plot(seq(1,num_positions), data[KmerList[1],], col=colors[1], type='l', ylim=c(0, maxY), xlab="Sequence Position", ylab="Frequency");
	for (i in 2:num_kmers) {
		points(seq(1,num_positions), data[KmerList[i],], col=colors[i], type='l');
	}
	plot.new();
	legend('center', KmerList, col=colors, pch=15,  ncol=8, cex=1);
	par(origPar);
}



plotDeltaDist = function(file) {
	data = read.table(file);
	num_entries = length(data[,1]);
	plot(seq(1,num_entries), data[,2], type='h', xlab="Kmer Index", ylab="Frequency");
	Q99 = quantile(data[,2], 0.99);
	abline(h=Q99, col='red');
	top = data[,2][data[,2]>=Q99]
	abline(v=length(top), col='green')
	print (paste("Q99: ", Q99, ", numTopKmers: ", length(top)));
}


plotNucFreqs = function(file) {
	data = read.table(file, header=F, row.names=1);
	num_nucs = length(data[,1]);
	colors = rainbow(num_nucs);
	max_freq = get_max(data);
	num_pos = length(data[1,]);
	plot(1:num_pos, data[1,], col=colors[1], ylim=c(0,max_freq), type='l', xlab="Sequence Position", ylab="Relative Frequency");
	for (i in 2:num_nucs) {
		points(1:num_pos, data[i,], col=colors[i], type='l');
	}
	legend('topright', rownames(data), col=colors, pch=15);
}




###### Supporting functions

get_max = function(table) {
	m = 0;
	for(i in 1:length(table[,1])) {
		x = max(table[i,]);
		if (x > m) {
			m = x;
		}
	}
	return(m);
}
