#################################################################################
## 
## After running:
##   find . -regex ".*.myEval" | summarize_myEvals.pl > myEvals.parsed.dat
## you can source this Rscript in R like so:
##  % R
##  %  source ("Nuc_Exon_Trans_Gene_SnSp.Rscript")
## which will plot all Sn and Sp values for each measure of prediction accuracy
##
#################################################################################


data = read.table("myEvals.parsed.dat"); 

# read evidence types
ev_types = data[,1]
num_evtypes = length(ev_types) 

NucSnSp = matrix(c(data[,4], data[,5]), nrow=num_evtypes, byrow=FALSE)
rownames(NucSnSp) = ev_types
colnames(NucSnSp) = (c("Sn", "Sp"));

ExonSnSp = matrix(c(data[,6], data[,7]), nrow=num_evtypes, byrow=FALSE)
rownames(ExonSnSp) = ev_types
colnames(ExonSnSp) = (c("Sn","Sp"))

TransSnSp = matrix(c(data[,8], data[,9]), nrow=num_evtypes, byrow=FALSE)
rownames(TransSnSp) = ev_types
colnames(TransSnSp) = (c("Sn","Sp"))

GeneSnSp = matrix(c(data[,10], data[,11]), nrow=num_evtypes, byrow=FALSE)
rownames(GeneSnSp) = ev_types;
colnames(GeneSnSp) = (c("Sn", "Sp"));

myBigColors = rainbow(20);
mycolors = c(myBigColors[10], myBigColors[15])

########### Plotting #########################
## set up for 4 in one plot:
num_plot = 4
num_plot_cells = 2 * num_plot

def.par <- par(no.readonly = TRUE) # save default, for resetting...
gridlayout = matrix(c(1:num_plot_cells),nrow=num_plot,ncol=2, byrow=TRUE);
layout(gridlayout, widths=rep(5,1), heights=c(1,1,1,1.7))

par(las=2); # veritical labels
par(mar=(c(1,5,2,0))) # set the axis labels vertical and adjust the margins.

## Plot for Nucleotide Sn,Sp
bp = barplot(t(NucSnSp), beside = TRUE, ylim=c(1,100), xpd=FALSE, col=mycolors, axisnames=FALSE)
abline(h=0)
box()
text(bp, t(NucSnSp), labels = format(t(NucSnSp), digits=2), pos = 3, cex = .75)
title("Nucleotide Accuracy")

# draw legend
plot.new()
legend("topleft", legend=c("Sn","Sp"), pch=15, col=mycolors)

# Exon plot
barplot(t(ExonSnSp), beside = TRUE, ylim=c(1, 100), xpd=FALSE, col=mycolors, axisnames=FALSE)
abline(h=0)
box()
text(bp, t(ExonSnSp), labels = format(t(ExonSnSp), digits=2), pos = 3, cex = .75)
title("Exon Accuracy");

plot.new()

# Transcript Plot
barplot(t(TransSnSp), beside = TRUE, ylim=c(1,100), xpd=FALSE, col=mycolors, axisnames=FALSE)
abline(h=0)
box()
text(bp, t(TransSnSp), labels = format(t(TransSnSp), digits=1), pos = 3, cex = .75)
title("Transcript Accuracy");

plot.new()

# Gene Plot
par(mar=(c(9,5,2,0))) # set the axis labels vertical and adjust the margins.
barplot(t(GeneSnSp), beside = TRUE, ylim=c(1,100), xpd=FALSE, col=mycolors)
abline(h=0)
box()
text(bp, t(GeneSnSp), labels = format(t(GeneSnSp), digits=1), pos = 3, cex = .75)
title("Gene Accuracy")


plot.new()

par(def.par)

#####################################################
# copy the graph over to a postscript file:
# dev.copy2eps(file="myplot.eps");
#####################################################
